<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://opensergo.io/zh-cn/blog</id>
    <title>OpenSergo Blog</title>
    <updated>2023-01-11T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://opensergo.io/zh-cn/blog"/>
    <subtitle>OpenSergo Blog</subtitle>
    <icon>https://opensergo.io/zh-cn/img/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2023/01/11）]]></title>
        <id>opensergo-community-meeting-20230111</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20230111"/>
        <updated>2023-01-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次（2023/01/11）OpenSergo 与 Sentinel 社区会议合并进行，会议纪要：]]></summary>
        <content type="html"><![CDATA[<p>本次（2023/01/11）OpenSergo 与 Sentinel 社区会议合并进行，会议纪要：</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="议题讨论">议题讨论<a class="hash-link" href="#议题讨论" title="标题的直接链接">​</a></h2><ol><li>@屿山 详细分享了 OpenSergo 控制面 Go 扩展性的技术方案及业界调研。OpenSergo Control Plane 作为统一服务治理控制面，期望提供低侵入、灵活的扩展机制，以便支持配置监听/转换、策略预计算等模块可插拔扩展。欢迎社区一起参与讨论与设计：<a href="https://github.com/opensergo/opensergo-control-plane/issues/46" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-control-plane/issues/46</a></li><li>@Jason 详细分享并讨论了事件/消息治理 proto 相关的设计，Apache EventMesh 等社区同学参与了讨论完善。该设计还在进一步完善中，欢迎大家参与完善：<a href="https://github.com/opensergo/opensergo-specification/issues/62" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/issues/62</a></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="其它社区进展同步">其它社区进展同步<a class="hash-link" href="#其它社区进展同步" title="标题的直接链接">​</a></h2><p>OpenSergo 社区关键进展：</p><ul><li><strong>Java 社区落地</strong>：<a href="https://github.com/alibaba/spring-cloud-alibaba/blob/2.2.x/spring-cloud-alibaba-examples/governance-example/label-routing-example/readme-zh.md#%E9%9B%86%E6%88%90opensergo" target="_blank" rel="noopener noreferrer">Spring Cloud Alibaba 正式发布 2.2.10.RC1 版本支持服务治理相关能力并支持 OpenSergo 流量路由 spec</a>，欢迎社区体验。</li></ul><p>Sentinel 社区关键进展：</p><ul><li>Sentinel 社区近期在验证 GraalVM 下流量防护能力时遇到了一些问题，欢迎社区一起解决：<a href="https://github.com/alibaba/Sentinel/issues/3012" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/issues/3012</a></li><li>Sentinel Go OpenSergo data-source 完成代码重构与结构完善：<a href="https://github.com/alibaba/sentinel-golang/pull/489" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/sentinel-golang/pull/489</a></li></ul><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="社区会议参与方式">社区会议参与方式<a class="hash-link" href="#社区会议参与方式" title="标题的直接链接">​</a></h2><p>OpenSergo 社区会议每两周开展一次（一般是每两周的周三晚），时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>本次社区会议是春节前的最后一次社区会议，社区在此预祝各位开发者新年快乐~</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/12/07）]]></title>
        <id>opensergo-community-meeting-20221207</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20221207"/>
        <updated>2022-12-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次（2022/12/07）OpenSergo 与 Sentinel 社区会议合并进行，会议纪要：]]></summary>
        <content type="html"><![CDATA[<p>本次（2022/12/07）OpenSergo 与 Sentinel 社区会议合并进行，会议纪要：</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="议题讨论">议题讨论<a class="hash-link" href="#议题讨论" title="标题的直接链接">​</a></h2><ol><li><p>@十眠 分享了 Spring Cloud Alibaba 流量路由基于 OpenSergo 新的流量路由 CRD 的演示与改造。目前 OpenSergo 流量路由 CRD 直接基于 Istio VirtualService/DestinationRule 进行扩展，传输链路 proto 基于 RDS 进行扩展，以便做到易理解、通用。欢迎社区一起 review SCA+OpenSergo 流量路由 spec 整合 PR：<a href="https://github.com/alibaba/spring-cloud-alibaba/pull/2921" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/spring-cloud-alibaba/pull/2921</a></p></li><li><p>@流士 介绍了无损上下线治理相关的技术与模型设计，并与 bilibili、小红书的同学进行了探讨。对于任何一个线上应用来说，发布、扩容、缩容、重启等操作不可避免。伴随微服务规模化和应用的云原生化，对业务频繁发布过程中流量损失的容忍度逐步降低，在应用部署阶段我们可以借助无损上下线治理解决变更态业务有损问题。模型设计可以参考 <a href="https://mp.weixin.qq.com/s/KBVrGBsYKtgcmvagNOfzqw" target="_blank" rel="noopener noreferrer">OpenSergo 无损上下线治理之模型与原理篇</a> 这篇文章。</p></li></ol><p><img loading="lazy" src="https://user-images.githubusercontent.com/9434884/208599571-b71b3c85-fd92-4bc5-afbb-5602dde39b42.png" alt="image" class="img_E7b_"></p><ol start="3"><li>@宿何(Eric) 介绍了从微服务框架的视角如何统一对接 Sentinel 2.0 流量治理能力。Sentinel 2.0 将升级为云原生的流量治理组件，在原有流量防护与自愈能力的基础上，新增流量路由调度、负载均衡策略、流量权重策略、流量染色等流量治理的核心能力。目前 Sentinel 社区还在进行骨架抽象，预计下次社区双周会可以分享 Sentinel 2.0 初版骨架的 POC。</li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="其它社区进展同步">其它社区进展同步<a class="hash-link" href="#其它社区进展同步" title="标题的直接链接">​</a></h2><p>OpenSergo 社区关键进展：</p><ul><li><a href="https://github.com/opensergo/opensergo-go-sdk" target="_blank" rel="noopener noreferrer">OpenSergo Go SDK</a> 正式发布首个版本，具备各个 Go 框架与组件快速对接 OpenSergo 标准 CRD 的能力，进一步扩充多语言治理生态。后续社区将持续推进各主流微服务框架与 OpenSergo 生态的对接，并将流量治理核心能力沉淀到 Sentinel Go 2.0 中。</li></ul><p>Sentinel 社区关键进展：</p><ul><li>社区贡献的 Kubernetes operator for Sentinel dashboard 已合并，将作为 Sentinel 2.0 的周边配套组件一起发布。GitHub repo: <a href="https://github.com/sentinel-group/sentinel-dashboard-k8s-operator" target="_blank" rel="noopener noreferrer">https://github.com/sentinel-group/sentinel-dashboard-k8s-operator</a></li><li>社区正在讨论 Sentinel 适配模块支持 Spring Boot 3 (Spring 6) 的事项，欢迎社区一起参与讨论：<a href="https://github.com/alibaba/Sentinel/issues/2986" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/issues/2986</a></li></ul><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="社区会议参与方式">社区会议参与方式<a class="hash-link" href="#社区会议参与方式" title="标题的直接链接">​</a></h2><p>OpenSergo 社区会议每两周开展一次（一般是每两周的周三晚），时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>下一次社区会议为2022年度最后一次 Sentinel &amp; OpenSergo 社区联合会议，时间为 2022/12/22（周四）晚 19:30，欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/11/23）]]></title>
        <id>opensergo-community-meeting-20221123</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20221123"/>
        <updated>2022-11-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次（2022/11/23）OpenSergo 与 Sentinel 社区会议合并进行，议程如下：]]></summary>
        <content type="html"><![CDATA[<p>本次（2022/11/23）OpenSergo 与 Sentinel 社区会议合并进行，议程如下：</p><ul><li>同步上一周期的进展，包括微服务治理 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入，以及 Sentinel 社区进展。</li><li>社区分享与讨论，包括 Sentinel 2.0 新模型及流量治理骨架设计讨论、OpenSergo 与 Istio 生态结合的方案讨论等。</li></ul><p>会议纪要：</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="议题讨论">议题讨论<a class="hash-link" href="#议题讨论" title="标题的直接链接">​</a></h2><ol><li>社区分享了 Sentinel 2.0 新模型及流量治理骨架设计。Sentinel 2.0 将升级为流量治理组件并作为 OpenSergo 流量治理能力与标准实现，其中重点设计包括：</li></ol><ul><li>Sentinel 2.0 SDK 新模型：<a href="https://github.com/alibaba/Sentinel/issues/2845" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/issues/2845</a></li><li>Sentinel 2.0 流量治理骨架抽象：<a href="https://github.com/alibaba/Sentinel/issues/2943" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/issues/2943</a></li><li>Sentinel 2.0 自适应策略抽象：<a href="https://github.com/alibaba/Sentinel/issues/1889" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/issues/1889</a></li></ul><p>欢迎大家一起参与 Sentinel 2.0 Java/Go 版本的共建~</p><ol start="2"><li>社区分享了 OpenSergo 与 Istio 生态结合的方案，同时分享了 OpenSergo 流量路由 spec 订正思路。</li></ol><ul><li>关于 OpenSergo 与 Istio 生态结合的方案，有两种情况（1）OpenSergo 控制平面具备 CRD 转换的能力，支持将 OpenSergo 流量路由/染色 CRD 受限转换为 Istio VirtualService/DestinationRule 以及 EnvoyFilter（按需）。这样可以做到开箱即用，但 CRD 转换受限于 Istio/Envoy 本身的能力，只能配置最基本的 OpenSergo 治理能力（2）OpenSergo 控制面将 CRD 转为 low-level config 后由 OpenSergo 自身的链路进行配置下发，通过 Envoy WASM plugin 或 SDK 生效（后者即框架本身支持 OpenSergo），这种场景支持全部的 OpenSergo 治理能力。</li><li>基于通用性、理解成本等考虑，社区提出了 OpenSergo 流量路由 spec 的另一种思路：直接基于 Istio VirtualService/DestinationRule 进行字段扩展，重新定义了 <code>TrafficRouter</code> 与 <code>VirtualWorkload</code>。稍后社区将提交新的 PR 来进行详细描述。</li><li>基于以上两点，全链路灰度在 OpenSergo 生态中的实现方式：<code>TrafficLane</code> CRD 按需生成 TrafficRouter/VirtualWorkload CRD（OpenSergo 体系，走 OpenSergo 链路下发与生效）或 VirtualService/DestinationRule + EnvoyFilter（纯 Istio+xDS 体系）。</li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/9434884/203909968-cd375190-2f81-43ed-83ee-e1f7239fe31f.png" alt="image" class="img_E7b_"></p><p>同时社区针对 Istio 控制平面存在的问题进行了讨论。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="其它社区进展同步">其它社区进展同步<a class="hash-link" href="#其它社区进展同步" title="标题的直接链接">​</a></h2><p>OpenSergo 社区关键进展：</p><ul><li>本周社区对 OpenSergo Go SDK 整体做了几轮 review，并进行代码重构与完善完善。预计本周可以合并并发布初版，PR: <a href="https://github.com/opensergo/opensergo-go-sdk/pull/2" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-go-sdk/pull/2</a></li></ul><p>Sentinel 社区关键进展：</p><ul><li>近期社区开发者贡献了 Kubernetes operator for Sentinel dashboard，欢迎大家一起 review: <a href="https://github.com/sentinel-group/sentinel-dashboard-k8s-operator/pull/1" target="_blank" rel="noopener noreferrer">https://github.com/sentinel-group/sentinel-dashboard-k8s-operator/pull/1</a></li><li>社区正在梳理并处理 Sentinel 2.0 milestone issues，欢迎社区添加感兴趣的 feature/enhancement：<a href="https://github.com/alibaba/Sentinel/milestone/18" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/milestone/18</a></li></ul><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="社区会议参与方式">社区会议参与方式<a class="hash-link" href="#社区会议参与方式" title="标题的直接链接">​</a></h2><p>OpenSergo 社区会议每两周开展一次（一般是每两周的周三晚），时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo & ShardingSphere 社区共建微服务视角的数据库治理标准]]></title>
        <id>opensergo-database-governance-spec-with-shardingsphere</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-database-governance-spec-with-shardingsphere"/>
        <updated>2022-11-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[为什么需要微服务治理与 OpenSergo？]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="为什么需要微服务治理与-opensergo">为什么需要微服务治理与 OpenSergo？<a class="hash-link" href="#为什么需要微服务治理与-opensergo" title="标题的直接链接">​</a></h2><p>在经典微服务架构中，我们通常将服务调用中各角色划分为三部分：服务提供者、服务消费者、注册中心。经典的微服务架构可以解决微服务能调通、可以运行起来的问题。随着分布式服务架构的不断演进、业务规模的扩张，诸多复杂的稳定性与易用性问题显现出来，这时候就需要一些手段来针对日益复杂的微服务架构进行“治理”。微服务治理就是通过流量治理、服务容错、安全治理等技术手段来减少甚至避免发布和管理大规模应用过程中遇到的稳定性问题，对微服务领域中的各个组件进行治理。服务提供者、消费者、注册中心、服务治理，构成现代微服务架构中重要的几环。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/9434884/201810889-b31e7ac3-d39f-431e-a291-73ff3038b688.png" alt="image" class="img_E7b_"></p><p>微服务治理是把微服务做稳做好的关键一环。但是，业界微服务治理存在概念不统一、配置形式不统一、能力不统一、多框架统一管控较为复杂等问题。比如我们希望配置流量灰度规则，在 Spring Cloud Alibaba 中可能需要通过 YAML 方式配置，在 Dubbo 中需要通过另一种配置格式进行配置，在 Istio 体系内中可能又需要通过 Istio CRD 的方式进行配置。<strong>不同框架治理配置方式的不一致使得微服务统一治理管控的复杂度相当高</strong>。另外，业界的各种框架支持的服务治理能力都不统一，且通常比较基础，很多时候无法覆盖生产级的场景。</p><p><img loading="lazy" alt="background" src="/zh-cn/assets/images/why-do-we-need-spec-background-2fac977371c859603a8322d60b011a6d.jpg" width="2628" height="1012" class="img_E7b_"></p><p>基于上面这些痛点，阿里巴巴在2022年1月开始和 bilibili、字节等企业讨论服务治理如何规范化和更加普及，从而共同发起了 <a href="https://opensergo.io/zh-cn/" target="_blank" rel="noopener noreferrer">OpenSergo 项目</a>。<strong>OpenSergo 是开放通用的，覆盖微服务及上下游关联组件的微服务治理项目，从微服务的角度出发，涵盖流量治理、服务容错、服务元信息治理、安全治理等关键治理领域，提供一系列的治理能力与标准、生态适配与最佳实践，支持 Java, Go, Rust 等多语言生态</strong>。OpenSergo 的最大特点就是以统一的一套配置/DSL/协议定义服务治理规则，面向多语言异构化架构，覆盖微服务框架及上下游关联组件。无论微服务的语言是 Java, Go, Node.js 还是其它语言，无论是标准微服务还是 Mesh 接入，从网关到微服务调用，再到微服务对数据库/缓存的访问，开发者都可以通过同一套 OpenSergo CRD 标准配置进行统一的治理管控，而无需关注各框架、语言的差异点，降低异构化、全链路微服务治理管控的复杂度。</p><p><img loading="lazy" alt="overview" src="/zh-cn/assets/images/opensergo-spec-areas-cn-3089657c690085df443ce633db8ad2ae.png" width="1417" height="737" class="img_E7b_"></p><p>OpenSergo 提供 Java、Go 等多语言的 SDK，各个框架生态可以非常方便地通过 OpenSergo SDK 来对接 OpenSergo 标准配置，接入到 OpenSergo 生态中，通过 OpenSergo 控制平面 (Control Plane) 统一管理服务治理规则。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="微服务视角的数据库治理是保障服务稳定性的关键一环">微服务视角的数据库治理是保障服务稳定性的关键一环<a class="hash-link" href="#微服务视角的数据库治理是保障服务稳定性的关键一环" title="标题的直接链接">​</a></h2><p>提到“微服务治理”，很多开发者会首先想到针对微服务之间的调用流量进行治理，但很多时候大家容易忽视掉微服务访问存储与其它中间件的这部分流量。在一个真实的业务生产环境中，流量首先先进入入口网关（如 Nginx、Envoy），再流转到后端 Web Server，再流转到微服务之间的 RPC 调用，再流转到针对数据库、缓存、消息等存储/中间件的访问。在这样一个全链路的架构中，仅仅关注微服务之间的调用是不够的，我们需要针对链路中的每一环分别进行针对性的治理。其中微服务对数据库的访问是非常普遍的，也是容易出现稳定性问题的一环。比如：</p><ul><li>某个应用某类报表 SQL 访问量非常大，且查询非常消耗性能，把数据库 CPU 打满</li><li>慢 SQL 访问非常多，占满连接池/业务线程池，导致服务无法处理正常请求，甚至导致级联雪崩</li><li>连接池参数配置不合理，导致大量 SQL 写操作时无法有效获取连接，业务大量报错</li><li>数据库访问需要按环境标进行隔离，比如灰度数据写入到灰度表中</li></ul><p><img loading="lazy" alt="db-gov-bg" src="/zh-cn/assets/images/database-governance-background-b33bab01d26d0af07bdc1c510694b137.jpg" width="2204" height="1184" class="img_E7b_"></p><p>对于大多数的后端应用来讲，系统性能扩展的瓶颈主要受限于数据库。尤其在微服务的环境下，数据库的性能治理问题往往也是团队优先级最高的几类工作之一，数据库治理自然也成为微服务治理中必不可少的一环。我们期望开发者可以结合数据库治理能力，来保障微服务访问数据库的稳定性（保护微服务自身不被拖垮），同时也保障数据库的稳定性。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-联合-shardingsphere-社区共建数据库治理标准">OpenSergo 联合 ShardingSphere 社区共建数据库治理标准<a class="hash-link" href="#opensergo-联合-shardingsphere-社区共建数据库治理标准" title="标题的直接链接">​</a></h2><p>基于以上背景，OpenSergo 社区期望结合企业与开源社区的经验，抽出一套通用的、从微服务视角出发的数据库治理标准规范。<a href="https://shardingsphere.apache.org/" target="_blank" rel="noopener noreferrer">ShardingSphere</a> 作为数据库治理领域的标杆项目，沉淀了非常丰富的最佳实践与技术经验，可以很好地为 OpenSergo 补充数据库治理领域的空缺。<strong>因此 OpenSergo 社区联合 ShardingSphere 社区共建微服务视角的数据库治理标准，扩充治理边界，让社区能够以标准化的方式针对不同数据层框架与流量进行统一治理管控，共同推进治理领域技术与生态演进。</strong></p><p><img loading="lazy" alt="opensergo-db-governance-overview" src="/zh-cn/assets/images/opensergo-db-governance-overview-bf371dad0d4f8ea740c7149dc284f1e0.jpg" width="2216" height="1000" class="img_E7b_"></p><p>对于此次 OpenSergo 与 ShardingSphere 社区之间的合作，双方社区负责人都对此次合作表达了自己的观点：</p><blockquote><p><strong>Apache ShardingSphere PMC Chair 张亮</strong>: 在微服务领域，服务间的交互与协作已日臻完善，而服务对数据库的访问却依然缺失行之有效的标准。ShardingSphere 自开源以来，一直持续不断的践行着“连接、增强、可插拔”的设计哲学。其中，“连接”则是希望提供标准化的协议和接口，打破开发语言访问异构数据库的壁垒。OpenSergo 提出了微服务治理的标准，并首次将数据库的访问放在了标准中，非常具备前瞻性。作为访问数据库重要入口的微服务，我非常希望 ShardingSphere 和 OpenSergo 共建标准。</p></blockquote><blockquote><p><strong>OpenSergo &amp;&amp; Sentinel 社区负责人 赵奕豪（宿何）</strong>：在微服务治理领域中，除了微服务本身的治理之外，针对数据库访问的治理也是保障业务可靠性与连续性的关键一环。ShardingSphere 作为数据库治理领域的标杆项目，沉淀了非常丰富的最佳实践与技术经验，可以很好地为 OpenSergo 补充数据库治理领域的空缺。因此我们联合 ShardingSphere 社区共建微服务视角的数据库治理标准，扩充治理边界，期待让社区能够以标准化的方式针对不同数据层框架与流量进行统一治理管控，共同推进治理领域技术与生态演进。</p></blockquote><p>OpenSergo 微服务视角的数据库治理标准主要包括以下几部分：</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="对数据库-workload-及访问对象的抽象">对数据库 workload 及访问对象的抽象<a class="hash-link" href="#对数据库-workload-及访问对象的抽象" title="标题的直接链接">​</a></h3><p>在治理规则中，我们通常需要指定规则作用的数据库实例（或实例组），或者满足的 SQL 条件。针对这一部分，我们在 OpenSergo 数据库治理标准中针对数据库 target workload 及访问对象进行了一些抽象。</p><ul><li><strong>虚拟数据库 (VirtualDatabase)</strong>：在数据库治理中，不管是读写分离、分库分表、影子库，还是加密、审计和访问控制等，都需要作用在一个具体的数据库之上。在这里将这样的一个逻辑的数据库称为虚拟数据库，即 VirtualDatabase。VirtualDatabase 在应用看来是一组特定的数据库访问信息，并通过绑定特定的治理策略实现相应的治理能力</li><li><strong>数据库端点 (DatabaseEndpoint)</strong>：在数据库治理中，通过 VirtualDatabase 向应用声明了可以使用的逻辑数据库，而数据的真实存储则依赖于这样的一个物理的数据库，这里称为数据库访问端点，即 DatabaseEndpoint。DatabaseEndpoint 对应用无感知，它只能被 VirtualDatabase 通过特定治理策略所绑定然后连接和使用。</li></ul><p>针对访问对象的条件抽象：</p><ul><li><strong>数据库访问对象 (DatabaseAccessTarget)</strong>：定义一组匹配条件，如针对某个实例/库/表的访问、针对某类 SQL 性质（读/写操作）、按 SQL pattern 匹配、按 SQL 参数匹配等。将 DatabaseAccessTarget 与具体的治理规则结合，我们可以实现细粒度的数据库流量治理。</li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="流量治理在数据库访问的体现">流量治理在数据库访问的体现<a class="hash-link" href="#流量治理在数据库访问的体现" title="标题的直接链接">​</a></h3><p>在微服务对数据库的访问中，流量路由、流量隔离、流控降级与容错等相关流量治理能力是数据库治理中非常重要的一块。</p><p>在流控降级与容错领域，我们复用了 OpenSergo 流控降级与容错标准。OpenSergo 流控降级与容错 spec 定义了三要素：Target（针对怎样的流量）、Strategy（对应怎样的流量治理策略）、FallbackAction（触发策略之后的行为）。在针对数据库访问的治理中，我们将流量条件抽象为 <code>DatabaseAccessTarget</code>，结合 OpenSergo 自有的流控、并发控制、熔断等策略，即可以实现细粒度的流控降级与容错。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/9434884/201811647-23da5d68-1c7f-4fcf-b6ca-6c3f9e1dae5b.png" alt="db-ft" class="img_E7b_"></p><p>同时数据库流量治理体系中还有一些关键的、数据库领域特有的治理能力：</p><ul><li><strong>读写流量路由 (ReadWriteSplitting)</strong>：读写分离是常用的数据库扩展方式之一，主库用于事务性的读写操作，从库主要用于查询等操作。读写流量路由规则可以指定将读 SQL 路由到读库，事务性的读写操作路由到主库。</li><li><strong>分库分表路由 (Sharding)</strong>：数据分片路由是基于数据属性一种扩展策略，对数据属性进行计算后将请求路由到特定的数据后端，目前分为分片键分片和自动分片。其中分片键分片中需要指明需要分片的表、列、以及进行分片的算法。</li><li><strong>数据流量隔离 (影子库表 Shadow)</strong>：影子库表可以帮助在灰度环境或者测试环境中，接收灰度流量或者测试数据请求，结合影子算法等灵活配置多种路由方式。</li><li><strong>数据加密 (Encryption)</strong>：企业往往因为安全审计和合规的要求，需要对数据存储提供多种安全加固措施，比如数据加密。 数据加密通过对用户输入的 SQL 进行解析，并依据用户提供的加密规则对 SQL 进行改写，从而实现对原文数据进行加密，并将原文数据（可选）及密文数据同时存储到底层数据库。在用户查询数据时，它仅从数据库中取出密文数据，并对其解密，最终将解密后的原始数据返回给用户。</li></ul><p><img loading="lazy" alt="db-gov-feature-intro-1" src="/zh-cn/assets/images/db-governance-feature-intro-s1-f305d3bf46b2ed90a228ec6a6a17c9fa.jpg" width="3484" height="908" class="img_E7b_"></p><p>以下是一个读写流量路由规则的示例：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 虚拟数据库配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> database.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> VirtualDatabase</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> readwrite_splitting_db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> readwrite_splitting_db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">databaseMySQL</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">db</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> readwrite_splitting_db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">host</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3306</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">user</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">readWriteSplitting</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"readwrite"</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 声明所需要的读写分离策略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 写数据源的数据库端点配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> database.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> DatabaseEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> write_ds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">database</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">MySQL</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                 </span><span class="token comment" style="color:#999988;font-style:italic"># 声明后端数据源的类型及相关信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jdbc</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">mysql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//192.168.1.110</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">3306/demo_write_ds</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain">serverTimezone=UTC</span><span class="token important">&amp;useSSL=false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">username</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">connectionTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">idleTimeoutMilliseconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">maxLifetimeMilliseconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1800000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">maxPoolSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">minPoolSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 第一个读数据源的数据库端点配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> database.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> DatabaseEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> read_ds_0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">database</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">MySQL</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                 </span><span class="token comment" style="color:#999988;font-style:italic"># 声明后端数据源的类型及相关信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jdbc</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">mysql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//192.168.1.110</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">3306/demo_read_ds_0</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain">serverTimezone=UTC</span><span class="token important">&amp;useSSL=false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">username</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">connectionTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">idleTimeoutMilliseconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">maxLifetimeMilliseconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1800000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">maxPoolSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">minPoolSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 第二个读数据源的数据库端点配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> database.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> DatabaseEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> read_ds_1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">database</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">MySQL</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                              </span><span class="token comment" style="color:#999988;font-style:italic"># 声明后端数据源的类型及相关信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jdbc</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">mysql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//192.168.1.110</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">3306/demo_read_ds_1</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain">serverTimezone=UTC</span><span class="token important">&amp;useSSL=false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">username</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">connectionTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">idleTimeoutMilliseconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">maxLifetimeMilliseconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1800000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">maxPoolSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">minPoolSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 静态读写分离配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> database.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ReadWriteSplitting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> readwrite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">rules</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">staticStrategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">writeDataSourceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"write_ds"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">readDataSourceNames</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"read_ds_0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"read_ds_1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">loadBalancerName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"random"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">loadBalancers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">loadBalancerName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"random"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"RANDOM"</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>以下是一个针对某个 SQL 进行并发控制的示例。这个规则会针对 foo 应用针对 <code>SELECT * FROM users WHERE id = ?</code> 的 SQL 访问进行并发控制，单机并发数不超过 8。</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> traffic.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> DatabaseAccessTarget</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">select</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">sqlMatch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">exactMatch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SELECT * FROM users WHERE id = ?"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fault</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">tolerance.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConcurrencyLimitStrategy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> concurrency</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">limit</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">maxConcurrency</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">limitMode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Local'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fault</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">tolerance.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> FaultToleranceRule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">conc</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">limit</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">rule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">targets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">targetRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">select</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">strategies</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> concurrency</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">limit</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="其它数据库治理能力">其它数据库治理能力<a class="hash-link" href="#其它数据库治理能力" title="标题的直接链接">​</a></h3><ul><li><strong>数据库发现 (DatabaseDiscovery)</strong>：数据库自动发现指的是根据数据库高可用配置，通过探测的方式感知数据源状态变化，并对流量策略做出相应的调整。比如后端数据源为 MySQL MGR，那么可以配置数据库发现类型为 MYSQL.MGR，指定 group-name，并配置相应的探测心跳节律。</li><li><strong>分布式事务配置 (DistributedTransaction)</strong>：声明分布式事务相关的配置，目前支持声明事务的类型。</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="展望">展望<a class="hash-link" href="#展望" title="标题的直接链接">​</a></h2><p>微服务视角的数据库治理是保障微服务稳定性的重要一环。OpenSergo 社区将持续与 ShardingSphere 及 Database Mesh 社区进行合作，不断完善与丰富数据库治理标准及场景。接下来社区会开展 ShardingSphere 与 OpenSergo 的集成工作，将数据库治理 spec 落地到社区实现。</p><p>微服务治理是微服务改造深入到一定阶段之后的必经之路，是将微服务做稳做好的关键。OpenSergo 社区持续与 ShardingSphere、Database Mesh、CloudWeGo、Kratos、Spring Cloud Alibaba、Dubbo 等社区共同建设 OpenSergo 微服务治理标准，将企业与社区中微服务治理的场景与最佳实践共同提取成标准规范，也欢迎更多社区与企业一起参与 OpenSergo 微服务治理标准的共建。</p><p>OpenSergo 社区现在处于高速发展阶段，从微服务治理标准定义，到 Control Plane 的实现，再到 Java/Go/C++/Rust 等多语言 SDK 与治理功能的实现，再到各个微服务生态的整合与落地，都还有大量的演进工作，欢迎社区一起参与标准完善与代码贡献。</p><p><strong>OpenSergo 开源贡献小组正在火热招募贡献者</strong>。如果您有时间，有热情，有意愿，欢迎联系社区加入开源贡献小组，一起共同完善 OpenSergo 和 Sentinel，一起主导微服务治理技术与标准演进。Now let's start hacking!</p><p>欢迎关注 OpenSergo 社区微信公众号，了解微服务治理社区最新动态：OpenSergo</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/11/09）]]></title>
        <id>opensergo-community-meeting-20221109</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20221109"/>
        <updated>2022-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次 OpenSergo 社区双周会（2022/11/09）的议程：]]></summary>
        <content type="html"><![CDATA[<p>本次 OpenSergo 社区双周会（2022/11/09）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>社区分享与讨论，包括 Spring Cloud Alibaba 流量染色 Demo 演示、OpenSergo 控制面设计优化讨论、开源贡献小组任务梳理与讲解等</li></ul><p>本次 OpenSergo 社区双周会纪要：</p><ol><li><p>@十眠 演示了 Spring Cloud Alibaba 集成 OpenSergo 流量染色 spec 的 demo，适配模块的代码预计近期提交 PR。流量染色是流量治理领域非常重要的能力，欢迎社区一起来 review 与完善流量染色 spec: <a href="https://github.com/opensergo/opensergo-specification/pull/52" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/pull/52</a></p></li><li><p>社区针对 OpenSergo 控制平面 (Control Plane) 现有的设计与问题进行了讨论。其中包括：</p></li></ol><ul><li>控制平面取消订阅 (unsubscribe) 某个订阅分组的设计: <a href="https://github.com/opensergo/opensergo-control-plane/issues/7" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-control-plane/issues/7</a></li><li>控制平面向 client 推送数据时针对超时的处理机制设计：<a href="https://github.com/opensergo/opensergo-control-plane/issues/8" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-control-plane/issues/8</a></li><li>控制平面 CRD 事件处理 debounce 机制：<a href="https://github.com/opensergo/opensergo-control-plane/issues/24" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-control-plane/issues/24</a></li><li>监听数据的版本管理机制</li></ul><p>近期社区整理了很多 OpenSergo 控制平面相关的 good first issue，欢迎社区同学参与贡献：<a href="https://github.com/opensergo/opensergo-control-plane/issues" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-control-plane/issues</a></p><ol start="3"><li>Committer @贾江南 分享了如何快速参与到 OpenSergo 社区贡献中，并进行操作演示。大家也可以参考<a href="https://opensergo.io/zh-cn/docs/community/contribution-guidance/" target="_blank" rel="noopener noreferrer">社区贡献指南</a>进行入门：</li></ol><p>GitHub discussions: <a href="https://github.com/opensergo/opensergo-specification/discussions/55" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/55</a></p><hr><p>OpenSergo 社区会议每两周开展一次（一般是每两周的周三晚），时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 生态支持、流量染色... OpenSergo 10月最新动态来啦！]]></title>
        <id>opensergo-monthly-summary-202210</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-monthly-summary-202210"/>
        <updated>2022-11-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[OpenSergo 是开放通用的，覆盖微服务及上下游关联组件的微服务治理项目。OpenSergo 从微服务的角度出发，涵盖流量治理、服务容错、服务元信息治理、安全治理等关键治理领域，提供一系列的治理能力与标准、生态适配与最佳实践，支持 Java, Go, Rust 等多语言生态。]]></summary>
        <content type="html"><![CDATA[<p>OpenSergo 是开放通用的，覆盖微服务及上下游关联组件的微服务治理项目。OpenSergo 从微服务的角度出发，涵盖流量治理、服务容错、服务元信息治理、安全治理等关键治理领域，提供一系列的治理能力与标准、生态适配与最佳实践，支持 Java, Go, Rust 等多语言生态。</p><p><strong>Go 生态支持、流量染色最佳实践、流控降级与容错 spec 落地... OpenSergo 微服务治理社区 10月最新动态来啦，欢迎了解~</strong></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="微服务治理-spec-演进">微服务治理 Spec 演进<a class="hash-link" href="#微服务治理-spec-演进" title="标题的直接链接">​</a></h2><ul><li><strong>流量染色领域的最佳实践及 spec 设计正式透出</strong>。流量染色，顾名思义将请求流量进行颜色标记，并且将标记跟随着链路一直传递下去。结合流量路由与流量染色能力，我们可以实现全链路灰度、多环境隔离等场景，实现“流量泳道”的能力。流量染色是流量治理领域非常重要的能力，期待大家一起来完善场景以及实现相关能力，后续社区公众号会出专题文章解析这一块的场景与技术原理。</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="sdkcontrol-plane-演进">SDK/Control Plane 演进<a class="hash-link" href="#sdkcontrol-plane-演进" title="标题的直接链接">​</a></h2><ul><li><strong>OpenSergo Java SDK</strong> 迎来了首个发布版本 0.1.0-beta1。</li><li>由社区主导贡献的 <strong>OpenSergo Go SDK</strong> 初版已形成，目前已初步具备流控降级与容错 spec 的对接能力。相关 PR: <a href="https://github.com/opensergo/opensergo-go-sdk/pull/2" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-go-sdk/pull/2</a></li><li>OpenSergo Rust SDK 也在与社区规划中，欢迎 Rust 大佬一起参与贡献~</li><li><strong>性能与稳定性优化</strong>：社区针对同个应用多个框架分别对接了 OpenSergo SDK 的情况下，gRPC client 的复用机制进行了一些讨论与设计，预计会在11月对 Java/Go SDK 的实现进行完善。相关讨论可见：<a href="https://github.com/opensergo/opensergo-java-sdk/issues/8" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-java-sdk/issues/8</a></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="社区生态演进">社区生态演进<a class="hash-link" href="#社区生态演进" title="标题的直接链接">​</a></h2><ul><li>社区<strong>完成 Spring Cloud Alibaba 流量路由能力与 OpenSergo 流量路由 spec 的初步对接</strong>，集成模块预计11月发布正式版；后续 Dubbo, Kratos, CloudWeGo 等社区也会一起参与到流量路由能力建设及 spec 对接中。</li><li>随着流量治理组件 Sentinel Java 1.8.6 版本正式发布，<strong>Sentinel OpenSergo 流量治理数据源也迎来了首个版本</strong>。借助 <code>sentinel-datasource-opensergo</code> 数据源模块，开发者可以很方便地将 Kubernetes 集群下的应用通过 Sentinel 接入到 OpenSergo 控制面，然后通过统一的 OpenSergo CRD 对异构化的服务进行统一的流控降级与容错治理，原生支持 20+ 框架集成。文档可以参考：<a href="https://sentinelguard.io/zh-cn/docs/opensergo-data-source.html" target="_blank" rel="noopener noreferrer">https://sentinelguard.io/zh-cn/docs/opensergo-data-source.html</a></li><li>随着 OpenSergo Go SDK 初版成形，<strong>Sentinel Go 集成 OpenSergo 的数据源模块也已形成初版</strong>，目前支持流控、熔断、并发控制等规则 spec。该集成模块可作为 Go 框架对接 OpenSergo Go SDK 的指导示例，相关 PR 见：<a href="https://github.com/alibaba/sentinel-golang/pull/489" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/sentinel-golang/pull/489</a></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="社区开发者">社区开发者<a class="hash-link" href="#社区开发者" title="标题的直接链接">​</a></h2><ul><li><strong>本月 OpenSergo 社区迎来了新的一位 committer 贾江南</strong>（GitHub ID: <a href="https://github.com/jnan806" target="_blank" rel="noopener noreferrer">@jnan806</a>）。贾江南同学在过去的一段时间，积极、活跃地参与到 OpenSergo 社区讨论与贡献中，从0到1完成了 OpenSergo Go SDK 的初版实现，并且在 Go 生态适配、proto 管理、Java SDK 等方面都有着不少贡献，符合社区对 committer 持续贡献的期望。恭喜江南，期待未来持续贡献！</li></ul><hr><p><strong>OpenSergo 开源贡献小组正在火热招募贡献者</strong>。如果您有时间，有热情，有意愿，欢迎联系社区加入开源贡献小组，一起共同完善 OpenSergo 和 Sentinel；对于核心贡献者，我们会提名为 committer，一起主导微服务治理技术与标准演进，并且有持续的激励机制。Now let's start hacking!</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/10/26）]]></title>
        <id>opensergo-community-meeting-20221026</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20221026"/>
        <updated>2022-10-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次 OpenSergo 社区双周会（2022/10/26）的议程：]]></summary>
        <content type="html"><![CDATA[<p>本次 OpenSergo 社区双周会（2022/10/26）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>宣布 Committer 晋升动态</li><li>社区分享与讨论，包括流量染色 spec 与实践分享、Sentinel+OpenSergo 展望、多语言生态讨论等</li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li><p>经过全体 committer 提名与讨论，社区很高兴地宣布，贾江南（GitHub ID: @jnan806）正式晋升为 OpenSergo 社区 committer。贾江南同学在过去的一段时间，积极、活跃地参与到 OpenSergo 社区讨论与贡献中，从0到1完成了 OpenSergo Go SDK 的初版实现，并且在 Go 生态适配、proto 管理、Java SDK 等方面都有着不少贡献，符合社区对 committer 持续贡献的期望。恭喜江南，期待未来持续贡献！</p></li><li><p>@宿何 分享 Sentinel 近期社区动态及 Sentinel 2.0+OpenSergo 的演进。本周随着 Sentinel 1.8.6 版本正式发布，Sentinel OpenSergo 流量治理数据源也迎来了首个版本。借助 sentinel-datasource-opensergo 数据源模块，开发者可以很方便地将 Kubernetes 集群下的应用通过 Sentinel 接入到 OpenSergo 控制面，然后通过统一的 OpenSergo CRD 对异构化的服务进行统一的治理规则管控。后续社区会出专题教程来指导大家接入，简短文档可以参考：<a href="https://sentinelguard.io/zh-cn/docs/opensergo-data-source.html" target="_blank" rel="noopener noreferrer">https://sentinelguard.io/zh-cn/docs/opensergo-data-source.html</a></p></li><li><p>OpenSergo Java SDK 也迎来了首个发布版本 0.1.0-beta1: <a href="https://github.com/opensergo/opensergo-java-sdk/releases/tag/v0.1.0-beta1" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-java-sdk/releases/tag/v0.1.0-beta1</a></p></li><li><p>@十眠 分享了流量染色这一块领域的最佳实践及 spec 设计。流量染色，顾名思义将请求流量进行颜色标记，并且将标记跟随着链路一直传递下去。结合流量路由与流量染色能力，我们可以实现全链路灰度、多环境隔离等场景，实现“流量泳道”的能力。流量染色是流量治理领域非常重要的能力，社区正在形成初版文档，稍后会提交 PR 请大家一起进行完善。</p></li><li><p>社区对 OpenSergo 多语言生态进行简短的讨论。除了 Java 和 Go 生态之外，Rust 生态也是社区未来期望建设的重要生态，期待大家一起共建 Rust SDK。</p></li></ol><p>GitHub discussions: <a href="https://github.com/opensergo/opensergo-specification/discussions/50" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/50</a></p><hr><p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo Committer 晋升通告：贾江南]]></title>
        <id>committer-promotion-jiajiangnan</id>
        <link href="https://opensergo.io/zh-cn/blog/committer-promotion-jiajiangnan"/>
        <updated>2022-10-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[经过全体 committer 提名与讨论，社区很高兴地宣布，贾江南（GitHub ID: @jnan806）正式晋升为 OpenSergo 社区 committer。贾江南同学在过去的一段时间，积极、活跃地参与到 OpenSergo 社区讨论与贡献中，从0到1完成了 OpenSergo Go SDK 的初版实现，并且在 Go 生态适配、proto 管理、Java SDK 等方面都有着不少贡献，符合社区对 committer 持续贡献的期望。恭喜江南！]]></summary>
        <content type="html"><![CDATA[<p>经过全体 committer 提名与讨论，社区很高兴地宣布，<strong>贾江南（GitHub ID: @jnan806）正式晋升为 OpenSergo 社区 committer</strong>。贾江南同学在过去的一段时间，积极、活跃地参与到 OpenSergo 社区讨论与贡献中，从0到1完成了 OpenSergo Go SDK 的初版实现，并且在 Go 生态适配、proto 管理、Java SDK 等方面都有着不少贡献，符合社区对 committer 持续贡献的期望。恭喜江南！</p><p>贾江南的主要贡献：</p><ul><li>OpenSergo Go SDK 初版实现：<a href="https://github.com/opensergo/opensergo-go-sdk/pull/2" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-go-sdk/pull/2</a></li><li>Sentinel Go OpenSergo 数据源模块：<a href="https://github.com/alibaba/sentinel-golang/pull/489" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/sentinel-golang/pull/489</a></li><li>设计了 OpenSergo proto 管理实践：<a href="https://github.com/opensergo/opensergo-proto/issues/5" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-proto/issues/5</a></li><li>参与 OpenSergo Java SDK 代码完善，如 <a href="https://github.com/opensergo/opensergo-java-sdk/pull/7" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-java-sdk/pull/7</a></li></ul><p>Committer 证书：</p><p><img loading="lazy" alt="committer-sign" src="/zh-cn/assets/images/committer-sign-cn-e299b107afa512fcdd6a137db34c8692.jpg" width="1500" height="2260" class="img_E7b_"></p><p>新晋 Committer 寄语：</p><p><em>很荣幸加入到 OpenSergo 社区的 Commiter 队伍，在以后我将和大家一起来共同建设 OpenSergo。我在希望的同时也非常相信 OpenSergo 未来会在微服务治理的领域中拥有举足轻重的影响力。这里可以交流答疑、可以提升技术、可以挑战技术难点，无论你是新手还是大牛，只要你有时间，有热情，有意愿，欢迎加入社区、参与贡献、拥抱 OpenSergo ~~~</em></p><hr><p>OpenSergo 自项目发起开始就是开放共建的开源项目，微服务治理标准、最佳实践与生态的演进离不开各个企业与社区的共建。社区也在与 bilibili、中国移动、SphereEx 等企业以及 Kratos, CloudWeGo, ShardingSphere, Database Mesh, Apache APISIX, Dubbo, Spring Cloud Alibaba 等社区一起合作，共同完善微服务治理标准与实现。</p><p>OpenSergo 社区现在处于高速发展阶段，从微服务治理标准定义，到 Control Plane 的实现，再到 Java/Go/C++/Rust 等多语言 SDK 与治理功能的实现，再到各个微服务生态的整合与落地，都还有大量的演进工作，欢迎社区一起参与标准完善与代码贡献。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/9434884/198169761-7495f3db-f67a-4d01-9765-23df42a62f6f.png" alt="image" class="img_E7b_"></p><p><strong>OpenSergo 开源贡献小组正在火热招募贡献者</strong>。如果您有时间，有热情，有意愿，欢迎联系社区加入开源贡献小组，一起共同完善 OpenSergo 和 Sentinel；对于核心贡献者，我们会提名为 committer，一起主导微服务治理技术与标准演进，并且有持续的激励机制。Now let's start hacking!</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/10/12）]]></title>
        <id>opensergo-community-meeting-20221012</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20221012"/>
        <updated>2022-10-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次 OpenSergo 社区双周会（2022/10/12）的议程：]]></summary>
        <content type="html"><![CDATA[<p>本次 OpenSergo 社区双周会（2022/10/12）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>社区分享与讨论，包括 OpenSergo Go SDK 设计与实现讨论、Spring Cloud Alibaba + OpenSergo 流量路由 Demo 演示等</li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li>社区同学 @贾江南 分享了近期贡献的 OpenSergo Go SDK 的设计与实现，并讨论了同个应用多个框架分别对接了 OpenSergo SDK 的情况下，client 的复用机制（<a href="https://github.com/opensergo/opensergo-java-sdk/issues/8" target="_blank" rel="noopener noreferrer">issue 见此处</a>）。SDK 的很多细节实现以及可靠性设计还需要社区来完善，欢迎社区一起来 review 与完善。同时 Sentinel Go 社区也开始开展与 OpenSergo 流控降级与容错 spec 的对接，作为 Go 社区对接的范例，也欢迎更多的 Go 社区一起参与到对接与贡献中。</li></ol><p>相关 issue/PR:</p><ul><li>OpenSergo Go SDK PR: <a href="https://github.com/opensergo/opensergo-go-sdk/pull/2" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-go-sdk/pull/2</a></li><li>Sentinel Go OpenSergo data-source PR (WIP): <a href="https://github.com/alibaba/sentinel-golang/pull/489" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/sentinel-golang/pull/489</a></li></ul><ol start="2"><li>社区演示了 Spring Cloud Alibaba 流量路由能力对接 OpenSergo 流量路由 spec 的设计与 demo，相关代码还在整理中，这部分对接模块预计11月初发布正式版；后续 Dubbo, Kratos, CloudWeGo 等社区也可以参考这一部分，一起参与到流量路由能力建设及 spec 对接中。</li></ol><p>GitHub discussions: <a href="https://github.com/opensergo/opensergo-specification/discussions/47" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/47</a></p><hr><p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/09/28）]]></title>
        <id>opensergo-community-meeting-20220928</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20220928"/>
        <updated>2022-09-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次 OpenSergo 社区双周会（2022/09/28）的议程：]]></summary>
        <content type="html"><![CDATA[<p>本次 OpenSergo 社区双周会（2022/09/28）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>社区分享与讨论<ul><li>OpenSergo Spec 配置接入流程介绍与演示</li><li>SLS iLogtail 社区分享日志实践</li></ul></li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li>社区分享并演示了 OpenSergo 的 Spec 如何从定义 CRD、proto 到下发给 OpenSergo SDK 的整个流程。</li><li>iLogtail 社区的 @迅飞 同学进行了日志采集、收集等实践的分享，也提出了在云原生场景下 iLogtail 的实践，对日志生产与采集的治理进行的一些展望，同时 @十眠 提出了日志治理与微服务治理结合的可能性，表示后续可以从微服务打印日志的场景入手，进行这一领域标准的抽象。欢迎社区一起思考未来对微服务日志治理的 ideas。</li><li>社区针对 OpenSergo proto 文件及多语言 gRPC stub code 的管理方式进行了进一步的讨论，贾江南 在上周的基础上（<a href="https://github.com/opensergo/opensergo-proto/issues/3" target="_blank" rel="noopener noreferrer">issue 见此处</a>）分享了 proto 文件的管理的统一的思考与看法，针对社区提出的三个解决方案进行了<a href="https://github.com/opensergo/opensergo-proto/issues/5" target="_blank" rel="noopener noreferrer">对应的实现</a>，推荐了按照原生 protoc 方案管理 proto 的最佳实践，并建议将方案三利用 buf.build 的代码生成功能的方案作为可能的后续发展方向。</li></ol><p>最后 @杨博源 提出并与社区探讨 OpenSergo 在服务跨集群，跨云场景下应用和配置等方面可能出现的问题，社区后续可以进行进一步的讨论。</p><p>GitHub discussion 记录：<a href="https://github.com/opensergo/opensergo-specification/discussions/44" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/44</a></p><hr><p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li></ul><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>泮圣伟</name>
            <uri>https://github.com/panxiaojun233</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/09/15）]]></title>
        <id>opensergo-community-meeting-20220915</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20220915"/>
        <updated>2022-09-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本次 OpenSergo 社区双周会（2022/09/15）的议程：]]></summary>
        <content type="html"><![CDATA[<p>本次 OpenSergo 社区双周会（2022/09/15）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>社区分享与讨论<ul><li>OpenSergo Control Plane 讨论</li><li>proto 文件及 stub code 的管理方式讨论</li><li>数据库治理 spec 正式发布</li><li>开源贡献流程与协作讨论</li></ul></li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li><a href="https://github.com/opensergo/opensergo-control-plane/tree/initial-version" target="_blank" rel="noopener noreferrer">OpenSergo Control Plane POC 版本</a>正式对外透出，社区简单介绍了 OpenSergo 控制面的核心设计与代码结构，目前 OpenSergo 控制面项目还处于初期阶段，有非常多的完善与优化的空间，欢迎大家一起来 review 及贡献代码。相关 PR: <a href="https://github.com/opensergo/opensergo-control-plane/pull/5" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-control-plane/pull/5</a></li><li>社区很高兴地宣布，OpenSergo 社区与 ShardingSphere、Database Mesh 社区合作共建的<a href="https://github.com/opensergo/opensergo-specification/blob/main/specification/zh-Hans/database.md" target="_blank" rel="noopener noreferrer">数据库治理 spec v1alpha1 版本</a>已正式发布，后续社区会进一步开展 spec 的对接以及在 ShardingSphere 社区的落地。感谢 ShardingSphere、Database Mesh 社区同学的支持与合作，也欢迎社区同学积极参与到数据库治理 spec 及实现的贡献。</li><li>社区针对 <a href="https://github.com/opensergo/opensergo-proto" target="_blank" rel="noopener noreferrer">opensergo-proto 项目</a>及多语言 gRPC stub code 的管理方式进行了讨论，@jnan806 同学在 <a href="https://github.com/opensergo/opensergo-proto/issues/3" target="_blank" rel="noopener noreferrer">issue</a> 里面提供了自动CI、submodule 等思路，同时 Kratos 社区的同学也分享了 bilibili 的一些最佳实践（结合 <a href="https://github.com/bufbuild/buf" target="_blank" rel="noopener noreferrer">bufbuild/buf 项目</a>)，后续社区会参考这几种思路来优化 proto 的管理方式。</li><li>关于流量路由 spec 的落地，目前社区还需要设计流量路由规则对应的 proto 形态；接下来社区会完成流量路由 spec 在 Java SDK 的对接，并与 Spring Cloud Alibaba、Dubbo 等社区进行对接落地。</li><li>向社区介绍了如何快速参与到 OpenSergo 项目中，后续社区也会整理一些指南。</li></ol><p>GitHub discussion 记录：<a href="https://github.com/opensergo/opensergo-specification/discussions/41" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/41</a></p><hr><p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>钉钉会议入会口令：244 801 51010</li><li>电话呼入：+862281944261（中国大陆）+867388953916（中国大陆）</li><li>钉钉入会链接：dingtalk://dingtalkclient/action/open_mini_app?miniAppId=2018112162280005&amp;ddMode=push&amp;mainTask=true&amp;keepAlive=false&amp;newCalendar=1&amp;page=pages%2Fdetail%2Findex%3FuniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639&amp;fallback_url=dingtalk%3A%2F%2Fdingtalkclient%2Fpage%2Fcalendar_detail%3Fid%3D0%26uniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639</li></ul><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/08/31）]]></title>
        <id>opensergo-community-meeting-20220831</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20220831"/>
        <updated>2022-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：]]></summary>
        <content type="html"><![CDATA[<p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>电话呼入：+862281944261（中国大陆）+867388953916（中国大陆）</li><li>钉钉入会链接：dingtalk://dingtalkclient/action/open_mini_app?miniAppId=2018112162280005&amp;ddMode=push&amp;mainTask=true&amp;keepAlive=false&amp;newCalendar=1&amp;page=pages%2Fdetail%2Findex%3FuniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639&amp;fallback_url=dingtalk%3A%2F%2Fdingtalkclient%2Fpage%2Fcalendar_detail%3Fid%3D0%26uniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639</li></ul><p>本次社区双周会（2022/08/31）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>社区分享与讨论<ul><li>OpenSergo Control Plane 及 SDK 整体方案介绍</li><li>OpenSergo + Sentinel Java 演示</li><li>其它社区分享讨论</li></ul></li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li>社区同学 @xzd1621 分享了 OpenSergo Control Plane、SDK 的整体设计，并分享了控制面与数据面之间 gRPC 协议的详细设计。Control Plane 的初版代码还在整理中，整理完成后将正式开源透出。</li></ol><ul><li>OpenSergo universal transport service gRPC 协议设计：<a href="https://github.com/opensergo/opensergo-proto/issues/1" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-proto/issues/1</a></li><li>Control Plane 设计：<a href="https://github.com/opensergo/opensergo-specification/discussions/36#discussioncomment-3517830" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/36#discussioncomment-3517830</a></li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/30654585/187685459-eee43b2c-92ea-450f-8566-1571d0470e68.png" alt="cp" class="img_E7b_"></p><ol start="2"><li>社区通过 Sentinel (Java) + OpenSergo 的示例，演示了从拉起控制面，到应用通过 Sentinel 数据源接入 OpenSergo 控制面，再到通过控制面配置流控降级与容错 CRD 使得接入应用可以生效限流 整个流程。目前 OpenSergo Java SDK 及 Sentinel 数据源均已完成初版，可以作为社区接入的参考，欢迎社区一起来 review。</li></ol><ul><li>Initial version of OpenSergo Java SDK: <a href="https://github.com/opensergo/opensergo-java-sdk/pull/1" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-java-sdk/pull/1</a></li><li>Sentinel OpenSergo data-source (Java): <a href="https://github.com/alibaba/Sentinel/pull/2842" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/Sentinel/pull/2842</a></li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/9434884/186125289-efb5e75a-0d6d-486c-a577-f986024ad911.png" alt="image" class="img_E7b_"></p><ol start="3"><li>社区进行了一些细节的讨论，包括 spec 的扩展性、控制面与数据面之间通信协议的扩展性，以及未来可以落地的生态。社区欢迎各个开发者、社区与企业一起来完善 OpenSergo spec，共同扩充微服务治理标准与场景；同时对于 SDK 及 Control Plane 的扩展性，欢迎社区一起参与设计和代码贡献。</li><li>数据库治理 spec 方面，ShardingSphere &amp;&amp; Database Mesh 社区同学正在进行最终的整理，预计下周形成终稿，作为 v1alpha1 版本正式对外发布。</li></ol><p>GitHub discussion 记录：<a href="https://github.com/opensergo/opensergo-specification/discussions/36" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/36</a></p><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/08/17）]]></title>
        <id>opensergo-community-meeting-20220817</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20220817"/>
        <updated>2022-08-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：]]></summary>
        <content type="html"><![CDATA[<p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>电话呼入：+862281944261（中国大陆）+867388953916（中国大陆）</li><li>钉钉入会链接：dingtalk://dingtalkclient/action/open_mini_app?miniAppId=2018112162280005&amp;ddMode=push&amp;mainTask=true&amp;keepAlive=false&amp;newCalendar=1&amp;page=pages%2Fdetail%2Findex%3FuniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639&amp;fallback_url=dingtalk%3A%2F%2Fdingtalkclient%2Fpage%2Fcalendar_detail%3Fid%3D0%26uniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639</li></ul><p>本次社区双周会（2022/08/17）的议程：</p><ul><li>同步上一周期的进展，包括 spec 建设、Control Plane &amp;&amp; SDK 进展、社区生态接入等进展</li><li>社区分享与讨论：<ul><li>流量路由 spec v1alpha1 细节讨论，PR: <a href="https://github.com/opensergo/opensergo-specification/pull/29" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/pull/29</a></li><li>数据库治理 spec v1alpha1 讨论，相关 issue: <a href="https://github.com/opensergo/opensergo-specification/issues/15" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/issues/15</a></li></ul></li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li>ShardingSphere &amp;&amp; Database Mesh 社区同学分享了数据库治理 v1alpha1 spec 详细设计并进行了讨论。数据库治理 v1alpha1 spec 已提交至社区，本周社区将一起补充完善相关 spec，并补充原有流量路由、流控降级与容错 spec 使其支持数据库治理，计划8月底正式发布。欢迎社区一起参与讨论与完善：<a href="https://github.com/opensergo/opensergo-specification/issues/15" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/issues/15</a></li><li>社区分享了流量路由 v1alpha1 spec 的细化设计，该设计覆盖了更全面的流量 match、target destination、router chain 的细节设计，并结合流量路由的经典场景进行说明。CloudWeGo、Kratos、SOFA 等社区参与了相关讨论。欢迎大家一起 review 该 proposal: <a href="https://github.com/opensergo/opensergo-specification/pull/29" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/pull/29</a></li><li>社区介绍了 OpenSergo Control Plane 及 SDK 的进展，并讨论了传输层 proto 及 service 的设计。在传输层方面，社区经过尝试后，决定暂时采用自定义简单 gRPC 协议的方式（OpenSergo universal transport service）来实现；xDS ECDS 链路方式由于社区实践不成熟、client 实现成本高等原因，暂时保持观望。Control Plane 预计下周会形成初版，Java SDK 的 POC 实现已提交，可参考：<a href="https://github.com/opensergo/opensergo-java-sdk/pull/1" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-java-sdk/pull/1</a> 。Go SDK 设计可参考通用 SDK 设计，后续会和 Kratos、CloudWeGo 社区一起进行共建。</li></ol><p>GitHub discussion 记录：<a href="https://github.com/opensergo/opensergo-specification/discussions/27" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/27</a></p><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 社区双周会纪要（2022/08/04）]]></title>
        <id>opensergo-community-meeting-20220804</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-community-meeting-20220804"/>
        <updated>2022-08-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：]]></summary>
        <content type="html"><![CDATA[<p>OpenSergo 社区会议每两周开展一次，时间为1小时左右。入会方式：</p><ul><li>会议形式：钉钉会议</li><li>OpenSergo 社区交流群（钉钉群）：34826335</li><li>电话呼入：+862281944261（中国大陆）+867388953916（中国大陆）</li><li>钉钉入会链接：dingtalk://dingtalkclient/action/open_mini_app?miniAppId=2018112162280005&amp;ddMode=push&amp;mainTask=true&amp;keepAlive=false&amp;newCalendar=1&amp;page=pages%2Fdetail%2Findex%3FuniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639&amp;fallback_url=dingtalk%3A%2F%2Fdingtalkclient%2Fpage%2Fcalendar_detail%3Fid%3D0%26uniqueId%3DYU1YbnpXaFZaVXo2TUd4QXRoVUNIQT09%26recurrenceId%3D1653478200000%26inviter%3D181693639</li></ul><p>本次社区双周会（2022/08/04）的议程：</p><ul><li>同步上一周期的进展，包括标准建设、社区生态接入等进展</li><li>讨论下一周期的规划和方向，一起讨论社区的一些 idea</li><li>社区分享：数据库治理 ideas</li></ul><p>本周 OpenSergo 社区双周会纪要：</p><ol><li>与社区讨论了 OpenSergo SDK 与 operator 中间 gRPC 通信层传输的设计，介绍了 OpenSergo universal transport service 及 OpenSergo on xDS (ECDS) 两种方案。关于 OpenSergo on xDS (ECDS) 的可行性及复杂度，社区还在进行更多的探索。详情可参考：<a href="https://github.com/opensergo/opensergo-specification/issues/22" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/issues/22</a></li><li>ShardingSphere &amp;&amp; Database Mesh 社区同学分享了数据库治理的相关技术，及数据库治理 v1alpha1 spec 的整体设计，包含虚拟数据库、流量治理（负载均衡、读写分离、流控降级）、分库分表、访问控制等几大领域。社区同学正在整理相关标准，稍后会在社区提 proposal 进行讨论。</li><li>CloudWeGo Kitex, Kratos, Spring Cloud Alibaba 等社区都对全链路灰度等能力比较感兴趣，也有在做一些设计，欢迎各个社区一起来完善相关 spec，并落地到各个社区实现中。</li></ol><p>GitHub discussion 记录：<a href="https://github.com/opensergo/opensergo-specification/discussions/21" target="_blank" rel="noopener noreferrer">https://github.com/opensergo/opensergo-specification/discussions/21</a></p><p>欢迎社区同学参与讨论与分享。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 即将发布 v1alpha1，丰富全链路异构架构的服务治理能力]]></title>
        <id>opensergo-v1alpha1-is-coming</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-v1alpha1-is-coming"/>
        <updated>2022-06-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[OpenSergo 是什么]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-是什么">OpenSergo 是什么<a class="hash-link" href="#opensergo-是什么" title="标题的直接链接">​</a></h2><p>在传统微服务架构中，我们将服务调用中各角色分为四大块：服务提供者、服务消费者、注册中心、监控。随着分布式服务架构的不断演进带来诸多复杂的稳定性与易用性问题，单一的监控已无法满足架构的演进。在现代微服务架构中，我们需要一些手段来对复杂的微服务架构进行“治理”。微服务治理就是通过全链路灰度、无损上下线、流控降级、异常流量调度、数据库治理等技术手段来减少甚至避免发布和管理大规模应用过程中遇到的稳定性问题，对微服务领域中的各个组件进行治理。服务提供者、消费者、注册中心、服务治理，构成现代微服务架构中重要的“四大件”。</p><p><img loading="lazy" alt="image" src="/zh-cn/assets/images/nouveau-microservice-arch-2a1ab1482c37be31db84bf1a1193f84f.png" width="3196" height="916" class="img_E7b_"></p><p>在企业内部，往往存在着不同语言、不同通信协议的微服务，这种异构化的架构会导致治理微服务的过程中，业务开发者、架构师无法用统一的方式来对所有服务进行治理管控，并且这类异构会衍生出更多的痛点：</p><ul><li>业内对服务治理的能力和边界没有明确的认识，每个企业所定义的服务治理概念不一致，造成很高的理解和沟通成本。</li><li>开源微服务框架众多，对于服务治理缺乏一些标准化的约定。例如，Spring Cloud 中定义的微服务接口和 Dubbo 中定义的接口就没有办法互通，通过 Dubbo 和 Istio 管理的微服务也没有办法进行统一治理。开发者无法通过统一的配置方式来对不同框架、不同语言的服务进行统一治理管控。</li><li>缺少真正面向业务、能够减轻认知负担的抽象和标准。开发者真正想要的可能是简单的、指定服务间的调用关系和配置规则。但现在对于业务开发者来说，不仅需要了解不同微服务框架的部署架构，也要了解不同服务治理方式的概念和能力区别，认知成本很大。</li></ul><p>基于上面这些痛点，阿里巴巴在2022年1月开始和 bilibili、字节等厂商讨论服务治理如何规范化和更加普及，从而共同发起了 <a href="https://opensergo.io/zh-cn" target="_blank" rel="noopener noreferrer">OpenSergo 项目</a>。OpenSergo 是一套开放、通用的、面向分布式服务架构、覆盖全链路异构化生态的服务治理标准，基于业界服务治理场景与实践形成服务治理通用标准。OpenSergo 的最大特点就是<strong>以统一的一套配置/DSL/协议定义服务治理规则，面向多语言异构化架构，做到全链路生态覆盖</strong>。无论微服务的语言是 Java, Go, Node.js 还是其它语言，无论是标准微服务还是 Mesh 接入，从网关到微服务，从数据库到缓存，从服务注册发现到配置，开发者都可以通过同一套 OpenSergo CRD 标准配置针对每一层进行统一的治理管控，而无需关注各框架、语言的差异点，降低异构化、全链路服务治理管控的复杂度。</p><p><img loading="lazy" alt="image" src="/zh-cn/assets/images/opensergo-highlights-1c313d3a786bc2a5656a501ec58c86f2.png" width="3192" height="1598" class="img_E7b_"></p><p>OpenSergo 标准基于微服务治理中相关领域的实践与场景抽象，覆盖了服务元信息、流量治理、服务容错、数据库/缓存治理、服务注册发现、配置治理等十几个关键领域，覆盖了完整的微服务生命周期（从开发态到测试态，到发布态，再到运行态）。无论我们是希望针对 Spring Cloud + Dubbo 服务链路配置流量灰度隔离，还是希望针对一个 Go gRPC 服务进行流量控制，还是希望针对服务访问数据库的慢 SQL 调用进行自动熔断，我们都可以利用 OpenSergo spec 中定义的 CRD 标准来进行统一配置，而无需关注各框架不同的声明式 API 及互不兼容的配置格式。</p><p><img loading="lazy" alt="image" src="/zh-cn/assets/images/opensergo-landscape-cn-acfc7a38e6653050c0a2ea92bd2c9bc3.jpg" width="3440" height="1740" class="img_E7b_"></p><p>OpenSergo 生态由以下几部分组成：</p><ul><li><a href="https://github.com/opensergo/opensergo-specification" target="_blank" rel="noopener noreferrer">OpenSergo spec</a>：统一的服务协议与 CRD 标准定义</li><li>OpenSergo 多语言 SDK：提供统一的标准 CRD 对接模块，供各个框架组件对接 OpenSergo spec</li><li>OpenSergo 数据面：即对接 OpenSergo spec 的框架组件，均可通过 OpenSergo 标准方式进行统一治理</li><li>OpenSergo 控制面：提供统一的控制台来进行服务元信息查询以及流量路由、流量控制等治理规则配置。</li></ul><p>我们期望与各个社区进行合作共建，将更多的框架与组件对接到 OpenSergo 生态中，每个框架都是 OpenSergo 的数据面，可以通过 OpenSergo CRD 进行统一治理管控。</p><p>那么 OpenSergo 标准到底是什么样子的呢？我们可以利用 OpenSergo 标准来做哪些事情呢？下面我们来结合几个例子来进行介绍。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-标准介绍">OpenSergo 标准介绍<a class="hash-link" href="#opensergo-标准介绍" title="标题的直接链接">​</a></h2><p>OpenSergo 项目涵盖服务元信息、服务注册发现、流量治理、服务容错、数据库治理、缓存治理等领域。在我们的首个版本 v1alpha1 版本中，我们提供了 服务契约（元数据）、流量路由、流控降级 这几个领域的 CRD 标准。下面我们来介绍一下流量路由与流控降级这两个领域的示例。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="流量路由">流量路由<a class="hash-link" href="#流量路由" title="标题的直接链接">​</a></h3><p>流量路由，顾名思义就是将具有某些属性特征的流量，路由到指定的目标。流量路由是流量治理中重要的一环，我们可以基于流量路由标准来实现各种场景，如全链路灰度、金丝雀发布、容灾路由等。</p><p><a href="https://github.com/opensergo/opensergo-specification/blob/main/specification/zh-Hans/traffic-routing.md" target="_blank" rel="noopener noreferrer">流量路由规则(v1alpha1)</a> 主要分为三部分：</p><ul><li>Workload 标签规则 (WorkloadLabelRule)：将某一组 workload（如 Kubernetes Deployment, Statefulset 或者一组 pod，或某个 JVM 进程，甚至是一组 DB 实例）打上对应的标签</li><li>流量标签规则 (TrafficLabelRule)：将具有某些属性特征的流量，打上对应的标签</li><li>按照 Workload 标签和流量标签来做匹配路由，将带有指定标签的流量路由到匹配的 workload 中</li></ul><p>我们以广泛使用的全链路灰度场景为例。全链路灰度通过一系列的流量路由规则，将链路上的多个服务的相同版本划分到同一个泳道中，从而约束流量只在指定泳道中流转，实现全链路的流量隔离的目的。</p><p>整个流程可以用下图概括，我们通过通用的 Workload 标签规则与流量标签规则，来以统一的标准方式对完整的服务链路实现灰度的能力。</p><p><img loading="lazy" alt="image" src="/zh-cn/assets/images/traffic-routing-eb095953c5cc9e0acc61cabd95ecf493.png" width="1984" height="1528" class="img_E7b_"></p><p><strong>给 Workload 打标签</strong>：</p><p>我们对新版本进行灰度时，通常会有单独的环境，单独的部署集。我们将单独的部署集打上 gray 标签（标签值可自定义），标签会参与到具体的流量路由中。
我们可以通过直接在 Kubernetes workload 上打 label 的方式进行标签绑定，如在 Deployment 上打上 <code>traffic.opensergo.io/label: gray</code> 标签代表灰度。对于一些复杂的 workload 打标场景（如数据库实例、缓存实例标签），我们可以利用 <code>WorkloadLabelRule</code> CRD 进行打标。示例：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> traffic.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> WorkloadLabelRule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> gray</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sts</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">label</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">rule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">workloadLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'gray'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">gray</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">database</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'foo_db'</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p><strong>给流量打标签</strong>：</p><p>假设现在需要将内部测试用户灰度到新版主页，测试用户 uid=12345，UID 位于 <code>X-User-Id header</code> 中，那么只需要配置如下 CRD 即可：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> traffic.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TrafficLabelRule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">traffic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">label</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">rule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">trafficLabel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> gray</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">match</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">condition</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"=="</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 匹配表达式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> header       </span><span class="token comment" style="color:#999988;font-style:italic"># 匹配属性类型</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'X-User-Id'</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic"># 参数名</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">12345</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic"># 参数值</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">condition</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"=="</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/index"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> path</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>通过上述配置，我们可以将 path 为 <code>/index</code>，且 uid header 为 12345 的 HTTP 流量，打上 gray 标，代表这个流量为灰度流量。</p><p><strong>按照标签来路由</strong>：</p><p>在具体的路由过程中，接入了 OpenSergo 的微服务框架、Service Mesh 的 proxy 中，只要实现了 OpenSergo 标准并进行上述规则配置，那么就能识别流量的标签和 workload 的标签。带 gray 标签的流量就会流转到 gray 标签的实例分组中；如果集群中没有 gray 实例分组（即没有 workload 带有这个标签），则默认 fallback 到没有标签的实例上。后续版本标准将提供未匹配流量的兜底配置方式。</p><p>社区还在不断完善流量路由相关的标准，并与各个社区合作共建，让更多的框架组件支持 OpenSergo 标准，从而支持统一的流量路由管控。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="流控降级与容错">流控降级与容错<a class="hash-link" href="#流控降级与容错" title="标题的直接链接">​</a></h3><p>流控降级与容错同样是服务流量治理中关键的一环，以流量为切入点，通过流控、熔断降级、流量平滑、自适应过载保护等手段来保障服务的稳定性。在 OpenSergo 中，我们结合 <a href="https://sentinelguard.io/" target="_blank" rel="noopener noreferrer">Sentinel</a> 等框架组件的场景实践对流控降级与容错抽出标准 CRD。一个<a href="https://github.com/opensergo/opensergo-specification/blob/main/specification/zh-Hans/fault-tolerance.md" target="_blank" rel="noopener noreferrer">容错治理规则</a> (<code>FaultToleranceRule</code>) 由以下三部分组成：</p><ul><li>Target: 针对什么样的请求</li><li>Strategy: 容错或控制策略，如流控、熔断、并发控制、自适应过载保护、离群实例摘除等</li><li>FallbackAction: 触发后的 fallback 行为，如返回某个错误或状态码</li></ul><p><img loading="lazy" alt="image" src="/zh-cn/assets/images/fault-tolerance-rule-overview-ebb0b8c8394b73b3203f3ea31a2ae97f.png" width="2286" height="972" class="img_E7b_"></p><p>无论是 Java 还是 Go 还是 Mesh 服务，无论是 HTTP 请求还是 RPC 调用，还是数据库 SQL 访问，我们都可以用这统一的容错治理规则 CRD 来给微服务架构中的每一环配置容错治理，来保障我们服务链路的稳定性。只要微服务框架适配了 OpenSergo，即可通过统一 CRD 的方式来进行流控降级等治理。</p><p>以下 YAML CR 示例定义的规则针对 path 为 <code>/foo</code> 的 HTTP 请求（用资源名标识）配置了一条流控策略，全局不超过 10 QPS。当策略触发时，被拒绝的请求将根据配置的 fallback 返回 429 状态码，返回信息为 <code>Blocked by Sentinel</code>，同时返回 header 中增加一个 header，key 为 <code>X-Sentinel-Limit</code>, value 为 foo。</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fault</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">tolerance.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> RateLimitStrategy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> rate</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">limit</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metricType</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> RequestAmount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">limitMode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Global</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">threshold</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">statDuration</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"1s"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fault</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">tolerance.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HttpRequestFallbackAction</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fallback</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">behavior</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ReturnProvidedResponse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">behaviorDesc</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 触发策略控制后，HTTP 请求返回 429 状态码，同时携带指定的内容和 header.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">responseStatusCode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">429</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">responseContentBody</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Blocked by Sentinel"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">responseAdditionalHeaders</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> X</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">Sentinel</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">Limit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"foo"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fault</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">tolerance.opensergo.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> FaultToleranceRule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">rule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app </span><span class="token comment" style="color:#999988;font-style:italic"># 规则配置生效的应用名</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">targets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">targetResourceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/foo'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">strategies</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> rate</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">limit</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">fallbackAction</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fallback</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">foo</span><br></span></code></pre><button type="button" aria-label="复制代码到剪贴板" title="复制" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>在近期的 2022 中间件开发者峰会中，我们宣布了 Sentinel 2.0 流量治理的全面升级。Sentinel 2.0 将原生支持流量治理相关 CRD 配置，结合 Sentinel 提供的各框架的适配模块，让 Dubbo, Spring Cloud Alibaba, gRPC 等20+框架能够无缝接入到 OpenSergo 生态中，用统一的 CRD 来配置流量路由、流控降级、服务容错等治理规则。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="社区规划">社区规划<a class="hash-link" href="#社区规划" title="标题的直接链接">​</a></h2><p>让异构微服务能够用统一的服务协议与配置方式进行治理、让更多微服务能够互联互通，塑造更加云原生的微服务，是 OpenSergo 建立之初就树立的长期发展目标。</p><p>在标准化建设上，OpenSergo 社区会联合更多开源社区与企业，在数据库治理、缓存治理、服务注册发现、配置治理等更多领域层面上标准化微服务治理能力，让企业能够用一套通用语言来描述和治理自己的微服务架构，让开发者专注于业务核心价值，让微服务框架也能够被客户轻松采用。</p><p>在社区生态建设上，OpenSergo 社区将逐渐覆盖从网关、RPC、数据库、缓存到服务发现、服务配置等分布式服务链路中的每一环生态，通过与各社区合作，让各主流框架均可以借助统一的 OpenSergo spec 来定义与实现服务治理的能力，开发者无需关注各框架、协议的概念与实现差异，降低开发者跨语言、跨框架、跨协议层面服务治理的管控成本。OpenSergo 社区将持续与 Kratos、CloudWeGo Kitex、Spring Cloud Alibaba、Dubbo 等社区进行合作，同时也会推进与 Apache APISIX、Envoy/Istio、gRPC、Druid、ShardingSphere 等更多社区的合作，将标准落地到各个框架中。我们也非常欢迎更多开源社区与企业一起加入 OpenSergo 的标准与生态共建。</p><p>在控制面建设上，OpenSergo 目前正在联合社区打造 OpenSergo Dashboard 作为统一的服务治理控制面，通过中立、通用的 OpenSergo 标准协议，让所有的微服务框架、所有的通信协议都可以被同一套微服务门户来治理。</p><p><img loading="lazy" alt="roadmap" src="/zh-cn/assets/images/roadmap-202206-4c77eeab0c3af619bdb0e4376c9d3111.png" width="3414" height="1216" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="欢迎加入">欢迎加入<a class="hash-link" href="#欢迎加入" title="标题的直接链接">​</a></h2><p>OpenSergo 自创立就是社区项目，通过 Apache License 2.0 协议开源。OpenSergo 正在与 Apache Dubbo, CloudWeGo Kitex (字节), Kratos (bilibili), Spring Cloud Alibaba, Apache APISIX 等社区进行合作，共同完善服务治理标准设计与实现，一起将 OpenSergo spec 推进和落地到更多微服务生态中。后续在 OpenSergo 服务治理标准的制定、发展上，也会通过公开、透明、民主的方式来制定标准、推动实施。社区也通过 GitHub issue、Gitter、邮件列表、社区双周会等机制，确保通过社区协作的方式来共建标准与实现。欢迎大家通过这些形式一起来讨论、共建。</p><p>也欢迎大家加入 OpenSergo 社区钉钉群（群号：34826335），一起来定义微服务治理的未来。</p><p>同时我们在阿里云也提供 <a href="https://www.aliyun.com/product/aliware/mse?spm=opensergo-website.blog.0.0.0" target="_blank" rel="noopener noreferrer">OpenSergo 的企业级产品 MSE</a>，提供服务治理、流控降级、注册配置中心、云原生网关、分布式事务等核心能力，欢迎大家体验。</p>]]></content>
        <author>
            <name>赵奕豪</name>
            <uri>https://github.com/sczyh30</uri>
        </author>
        <author>
            <name>鲁严波</name>
            <uri>https://github.com/robberphex</uri>
        </author>
        <author>
            <name>泮圣伟</name>
            <uri>https://github.com/panxiaojun233</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenSergo 正式开源]]></title>
        <id>opensergo-is-open-source</id>
        <link href="https://opensergo.io/zh-cn/blog/opensergo-is-open-source"/>
        <updated>2022-04-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="背景">背景<a class="hash-link" href="#背景" title="标题的直接链接">​</a></h2><p>软件架构的核心挑战是解决业务快速增长带来的系统复杂性问题。系统越复杂，对服务治理诉求越强烈，小的技术问题越可能被放大，从而造成大的线上故障。而微服务治理就是通过无损上线下、全链路灰度、流量防护等技术手段来减少、甚至避免发布和管理大规模应用过程中遇到的稳定性问题。</p><p>虽然大家都认为微服务治理很重要，但在落地过程中会遇到各种难题。</p><p>例如，在企业内部，往往存在着不同语言、不同通信协议的微服务，这会导致治理微服务的过程中，给业务开发者、架构师平添很多的认知负担，而这类异构会衍生出更多的痛点。</p><ul><li>业内对服务治理的能力和边界没有明确的认识，每个企业所定义的服务治理概念不一致，造成很高的理解和沟通成本。</li><li>开源微服务框架众多，对于服务治理缺乏一些标准化的约定。例如，Spring Cloud 中定义的微服务接口和 Dubbo 中定义的接口就没有办法互通，通过 Dubbo 和 Istio 管理的微服务也没有办法进行统一治理。</li><li>缺少真正面向业务、能够减轻认知负担的抽象和标准。开发者真正想要的可能是简单的、指定服务间的调用关系和配置规则。但现在对于业务开发者来说，不仅需要了解不同微服务框架的部署架构，也要了解不同服务治理方式的概念和能力区别，认知成本很大。</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="企业级微服务治理实践">企业级微服务治理实践<a class="hash-link" href="#企业级微服务治理实践" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="阿里巴巴的微服务实践">阿里巴巴的微服务实践<a class="hash-link" href="#阿里巴巴的微服务实践" title="标题的直接链接">​</a></h3><p>在阿里巴巴内部，服务治理体系从形态上经历了从 SDK 方式、到 Fat-SDK 方式、再到 Java Agent/Sidecar 化的演进历程。具体而言，阿里巴巴从 2008 年就开始了微服务的改造，诞生了服务框架 HSF 及配套的服务治理能力；2012 年，Dubbo 框架开源，提供了非常优秀的服务治理能力，这个阶段的服务治理能力是以 SDK 的方式和服务框架进行一体化演进的；2013 年开始，为了解决 SDK 升级成本高的问题，中间件团队推出轻量级隔离容器 Pandora，将服务治理能力通过 Fat-SDK 的方式从业务中剥离出来，大幅度提升了升级效率。</p><p>然而这种方式仍然面临较高的升级成本。为了将服务治理体系和业务彻底解耦，阿里巴巴从 2019 年开始，通过将服务治理能力下沉到 JavaAgent，实现了完全无需对业务做任何改造、就能接入服务治理的能力。后来，我们将这个技术方案进行产品化，通过阿里云微服务引擎 MSE 这款产品服务云上的企业客户。</p><p>同一时期，随着业务发展的多样化，多语言构建的业务在集团内部逐渐流行起来，阿里巴巴内部开始探索多语言的治理方案，采用了基于 Istio + Envoy 的 Sidecar 方式为异构语言服务，提供基础的服务治理能力。</p><p>在这个过程中我们逐渐发现，异构微服务框架之间有不同的体系和认知，在很多概念上无法完全对齐，用一套标准的服务治理方案治理各种微服务体系变得愈发困难。因此，我们迫切需要一个和语言无关、和技术形态无关，但贴近业务的统一服务治理规范，使得异构微服务体系能够互联互通以及进行统一治理。</p><p>总结下来，阿里巴巴内部的服务治理经历了从基础数据面建设、到治理能力探索、再到能力标准化建设三个阶段。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="bilibili-的微服务实践">bilibili 的微服务实践<a class="hash-link" href="#bilibili-的微服务实践" title="标题的直接链接">​</a></h3><p>从 2016 年开始，bilibili 进行经历巨石架构到微服务的完整转型，整个过程中，也面临了很多服务治理问题。从单体到微服务整个部署和管理模式开始进行转变，我们为了提高研发效率和稳定性拆分了不同粒度的服务，所以我们于 2017 年开始思考如何管理微服务，从而开始通过容器部署和隔离，在管理方面极大地解决了我们的问题，同时也建设了统一的注册中心和配置中心基础中间件，整个微服务也围绕这两个基础中间件做了很多服务治理相关的。</p><p>在早期我们语言还是比较统一的，基本上是以 Go 语言为主，有统一的 Kratos 框架，所以服务治理也是优先选择了 SDK 方式进行管控。随着这几年的业务快速发展，内部出现 Java、C++ 等一些语言，我们尝试了 Service Mesh 通过 Sidecar 方式进行管理，在这个过程中我们逐渐发现，整个维护成本其实是不小的，并且性能损耗在降本增效的这个大环境下也有比较大的挑战。所以，我们也非常期待有一套服务治理标准，可以在 Kratos 框架、Java Agent、Istio 等体系中使用。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="微服务治理的发展趋势">微服务治理的发展趋势<a class="hash-link" href="#微服务治理的发展趋势" title="标题的直接链接">​</a></h2><p>展望未来，微服务治理的发展趋势，是让业务迭代更加高效、业务和治理更加透明和解耦：</p><ul><li>服务治理数据面透明化、多元化：微服务数据面会逐渐下沉为基础设施，业务开发者会将数据面当作一个标准组件来使用。同时，服务治理也会通过多种形态来支持不同的数据面，对齐服务治理数据面能力。</li><li>服务治理数据面标准化：微服务框架会直接对接标准的服务治理标准，减轻微服务框架的对接负担；业务开发者也只需要理解标准的服务治理数据面标准，不需要了解底层能力，降低认知负担。</li><li>数据面实现互操作性：各个微服务框架、各个通信协议提供的能力会标准化，能够让用户用统一的模式来认知和治理。</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-的使命和愿景">OpenSergo 的使命和愿景<a class="hash-link" href="#opensergo-的使命和愿景" title="标题的直接链接">​</a></h2><p>基于此，阿里巴巴在2022年1月开始和 bilibili、字节等厂商讨论服务治理如何规范化和更加普及，从而共同发起了 OpenSergo 项目。</p><p>我们观察到，目前不同框架、不同语言在微服务治理上的概念碎片化、无法互通。所以，OpenSergo 致力于在不同的微服务框架、通信协议之间达成共识，形成服务治理规范。</p><ul><li>让业务开发者，不会因为不同的语言、不同的框架而产生割裂。</li><li>让架构师，能够用统一的规范来描述自己内部的微服务架构。</li><li>让中间件开发者，能够和现有微服务框架对齐，增强微服务框架之间的互操作能力，促进微服务框架在企业落地。</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-总览">OpenSergo 总览<a class="hash-link" href="#opensergo-总览" title="标题的直接链接">​</a></h2><p>OpenSergo 主要包含三大部分：</p><ul><li><p><strong>控制面</strong>：用户可以通过 CRD 或者 Dashboard 的方式查看、修改服务治理配置，并将这些管控信息下发到数据面。</p></li><li><p><strong>数据面</strong>：JavaAgent、Servcie Mesh、各个接入 OpenSergo 的微服务框架都能够接收到服务治理配置，并应用到当前的业务流量中。各个数据面都能够认可OpenSergo规定的服务治理配置、流量标签等信息，确保降低开发者理解成本。</p></li><li><p><strong>OpenSergo Spec</strong>：Spec 规定了控制面和数据面的通信约定，确保用户使用一种 Spec 即可描述不同框架、不同协议、不同语言的微服务架构，让开发者不再需要关注底层差异。</p></li></ul><p><img loading="lazy" src="/zh-cn/assets/images/what-is-opensergo-a518e1d8a40179477895a47ac0fadfb5.png" width="1614" height="860" class="img_E7b_"></p><p>对于控制面，OpenSergo 统一了治理规则，用户不必再绑定到某个开源方案、某个云厂商提供的服务上。不同的数据面、控制面只要对接 OpenSergo 规范，即可无缝对接现有的服务治理体系。</p><p>对于数据面，OpenSergo 提供了不同的接入方式：</p><ul><li>Spec/SDK 接入：微服务框架可以通过 OpenSergo 规范实现自助接入。各个框架也可以通过 SDK 简单地接入到 OpenSergo 中，这种接入方式能够获取到更多的框架内部信息，也能够省去 Sidecar 带来的额外性能、资源开销。</li><li>Sidecar 方式接入：对于多语言服务，OpenSergo 可以将服务治理规则下发到 Sidecar 中，以 Sidecar 方式治理现有的微服务应用。</li><li>Java Agent 接入：对于 Java 应用，Java Agent 可以用无侵入的方式将服务治理能力增强到现有的微服务应用中，能够很好地将存量 Java 应用带入到统一的微服务治理体系中来。</li></ul><p><img loading="lazy" src="/zh-cn/assets/images/arch-1-531cce477799dd61ffb089a0b7464a77.png" width="1600" height="998" class="img_E7b_"></p><p>从阿里巴巴集团内部和阿里云提供的服务治理经验来看，结合各个开源微服务框架、各公司内部的治理经验，从服务治理功能层面来说，目前业界认可的主要分为上图中的开发态、测试态、发布态、高可用、安全态五个部分：</p><ul><li>开发态：方便业务开发者了解微服务定义，方便开发调试；提升研发效率，让开发更快捷。<ul><li>服务契约：能够让各个微服务框架来定义提供了哪些接口、每个接口的参数、以及接口的业务说明；便于开发者迅速了解应用。</li><li>服务调试：能够填写入参、迅速发起一个服务调用，不再需要自己写代码。</li><li>服务Mock：在开发过程中，能够暂时模拟应用行为，防止应用依赖阻碍开发进度。</li><li>开发环境隔离：通过逻辑隔离的方式，为每一个正在开发的功能特性隔离出一个独立的环境， 在低成本的前提下，划分出多个完整的独立环境，使得各功能特性的开发调试不会互相影响， 提升开发迭代的效率。</li></ul></li><li>测试态：方便测试人员压测、回归、验证功能；提升测试效率，让测试更快更准更全面。<ul><li>服务压测：快速发起压测，迅速了解微服务的容量是否偏离基线，确保应用性能</li><li>自动化回归：通过自动化的方式进行回归测试，自动发起测试并自动比对结果进行验证，无需人工重复测试，保障业务代码逻辑的正确性</li><li>流量录制：将线上流量录制下来，自动生成测试用例进行回归测试，通过真实的请求丰富测试用例</li><li>流量回放：将录制好的流量重新运行，验证当前的业务运行结果是否和录制好的请求的结果匹配，保障业务逻辑的正确性</li></ul></li><li>发布态：解决业务发布的时候的流量治理问题，让应用发布能够顺畅稳定。<ul><li>无损下线：确保应用在发布、停止、扩容时，所有请求都不会被影响，确保微服务下线的过程中业务无损。</li><li>服务预热：应用刚启动时可能会存在一些资源未初始化完成、未预热完毕的情况，服务预热可以确保在这个场景下不影响业务。</li><li>金丝雀发布：满足特定流量特征的请求才会进入微服务的灰度节点，通过小流量验证微服务 新版的逻辑是否符合预期。</li><li>全链路灰度：一个迭代的多个应用同时发布，希望经过灰度的上游流量只能达到下游的灰度 节点，确保灰度流量只在灰度环境中流转。</li></ul></li><li>高可用：提供限流、降级、熔断等能力，保障业务稳定性、可用性。<ul><li>限流：针对超过阈值的流量进行限流控制，保障机器和整体业务的稳定性。</li><li>降级：在资源有限的情况下，针对某些不重要的请求返回预设的降级结果，把有限的资源让给重要的请求。</li><li>熔断：客户端访问后端服务不可用的情况下，返回预先定义的异常或结果，避免引起业务异常，甚至雪崩。</li><li>离群实例摘除：在单个服务提供者节点持续不可用的情况下，在消费者侧摘除这个异常节点，保障业务的高可用。</li><li>临近路由：微服务多可用区部署的情况下，确保流量优先在同一个可用区内流转，降低业务的整体时延。</li><li>就近容灾路由：当某个可用区发生故障，可以把流量尽快的切到正常的可用区，让业务以最快速度恢复。</li></ul></li><li>安全态：保护敏感业务、提供零信任能力，保障业务安全。<ul><li>服务鉴权：保护敏感微服务，确保敏感服务只能被已授权的应用访问和调用。</li><li>漏洞防护：微服务框架通常会陆陆续续被发现许多漏洞，整体的升级成本很高，需要通过不升级框架的方式实现漏洞的防护，可以通过流量拦截、动态程序修改等技术来修复和缓解。</li><li>配置鉴权：对于敏感配置，不希望任何微服务都有权限访问，控制只有受限的微服务才能访问。</li></ul></li></ul><p><img loading="lazy" src="/zh-cn/assets/images/arch-2-1edb0a3ddc142d381556ee8a473dcc53.png" width="1600" height="779" class="img_E7b_"></p><p>从更大的角度来看，除了微服务框架、Service Mesh、Java Agent 方式的治理之外，服务治理还会关注网关、存储等完整的调用链路；在实现上，也会包括微服务服务发现、配置管理、分布式事务等微服务基础组件的治理和接入。</p><p>在图中的子领域中，OpenSergo 会采纳现有的规范、提出落地新的规范，来给业务开发者提供一套标准界面，能够对业务开发者、架构师屏蔽底层差异，让他们专注于核心业务价值，从而真正兑现云原生微服务的价值。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-减少实施微服务治理时的阻力">OpenSergo 减少实施微服务治理时的阻力<a class="hash-link" href="#opensergo-减少实施微服务治理时的阻力" title="标题的直接链接">​</a></h2><p>OpenSergo 致力于提供统一的服务治理能力，让业务开发者、架构师能够以云原生的方式来定义自己的微服务架构，来满足自己的业务发展，从而减少实施微服务治理时的阻力。</p><p>在以往，架构师在设计架构时，总是要考虑各种微服务框架的能力、各种通信协议的差异、各种服务治理带来的能力差异，导致设计时要考虑很多底层的实现，极大的增加了认知负担。业务开发者也要关注当前的微服务框架如何才能满足自己的治理要求、当前的通信协议如何灰度、如何调试、如何限流等。可以预见，业务开发者将耗费很大一部分的精力在微服务框架、服务治理上，在核心业务价值上的投入却少了很多。</p><p>OpenSergo 将对底层能力标准化，对架构师、对业务开发者屏蔽底层差异，用更加云原生的方式来治理微服务。架构师只需要用统一的能力模型设计业务架构，而业务开发者也只需要利用统一的能力模型来专注于业务开发。</p><p>此外，对于企业而言，现有的微服务治理体系，严重特化于现有框架，阻碍了微服务框架的选型，也阻碍了新技术、新业务的发展。所以 OpenSergo 的另一个重点，是帮助开源微服务框架在企业顺利落地。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-提升开源微服务框架的落地速度">OpenSergo 提升开源微服务框架的落地速度<a class="hash-link" href="#opensergo-提升开源微服务框架的落地速度" title="标题的直接链接">​</a></h2><p>对于各类微服务框架，在企业中落地的一个重要难点就是与现有的服务治理体系相结合。借助 OpenSergo 标准化的服务治理能力，开源微服务框架可以通过标准化的服务治理能力与企业现有的基础设施结合，迅速在企业落地，兑现业务价值。</p><p>微服务框架对接 OpenSergo 后，业务开发者只需要修改环境变量来接入，即可和现有的服务治理系统相结合，提供上述的服务治理能力。而此前，每个企业都要对接各自的微服务治理体系，OpenSergo 能够提升企业接入新框架、新技术的速度，也能减少服务框架开发者的服务治理对接成本，扩大微服务框架的采纳率、影响力。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="opensergo-的未来规划">OpenSergo 的未来规划<a class="hash-link" href="#opensergo-的未来规划" title="标题的直接链接">​</a></h2><p>让异构微服务能够统一治理、让更多微服务能够互联互通，塑造更加云原生的微服务，是 OpenSergo 建立之初就树立的长期发展目标。</p><p>在数据面建设上，OpenSergo 社区将在服务注册与发现、服务治理能力上做进一步补齐，提供统一的服务治理控制面和 Dashboard，招募更多的企业和微服务框架进入社区。同时，我们看到控制面标准化、数据面多样化的趋势，Nginx、Ingress、Apache Dubbo-go-pixiu 等网关作为数据面的流量入口，与 SDK、Java Agent、Sidecar 等多种方式的数据面在能力上能够完全对齐，给更多用户带来简单、一致的、更加云原生的服务治理体验。</p><p>在标准化建设上，OpenSergo 社区会联合各个微服务框架、相关厂商、企业、用户等相关方，在更多领域层面上标准化微服务能力，让企业能够用一套语言来描述自己的微服务架构，让开发者专注于业务核心价值，让微服务框架也能够被客户轻松采用。</p><p>在控制面建设上，OpenSergo 社区目前已经提供 OpenSergo Dashboard 来直观实用，也将会给微服务标准功能提供一个参考控制面，并通过中立的 OpenSergo 协议，让所有的微服务框架、所有的通信协议都可以被同一套微服务门户来治理。</p><p><img loading="lazy" src="/zh-cn/assets/images/roadmap-c1f65906e4f0618a31744ebc5916bbbf.png" width="1600" height="833" class="img_E7b_"></p><p>OpenSergo 自创立就是社区项目，通过 Apache License 2.0 协议开源。后续在 OpenSergo 微服务规范的制定、发展上，也会通过公开、透明、民主的方式来制定标准、推动实施。未来也将通过 GitHub issue、邮件列表、社区双周会等机制，确保通过社区协作的方式确定相关规范。欢迎大家通过这些形式一起来讨论、共建。</p>]]></content>
        <author>
            <name>鲁严波</name>
            <uri>https://github.com/robberphex</uri>
        </author>
        <author>
            <name>陈志辉</name>
            <uri>https://github.com/tonybase</uri>
        </author>
        <author>
            <name>张乎兴</name>
            <uri>https://github.com/ralf0131</uri>
        </author>
        <author>
            <name>罗广明</name>
            <uri>https://github.com/GuangmingLuo</uri>
        </author>
    </entry>
</feed>